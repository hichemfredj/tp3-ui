{"ast":null,"code":"import _toConsumableArray from \"/Users/hichem/Documents/ULAVAL/E\\u0301TE\\u0301-2022/IFT-4100/tp3-demo/web-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/hichem/Documents/ULAVAL/E\\u0301TE\\u0301-2022/IFT-4100/tp3-demo/web-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/hichem/Documents/ULAVAL/E\\u0301TE\\u0301-2022/IFT-4100/tp3-demo/web-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hichem/Documents/ULAVAL/E\\u0301TE\\u0301-2022/IFT-4100/tp3-demo/web-app/my-app/src/App.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useEffect, useState } from \"react\"; // Librairie qui va nous permettre de communiquer avec notre contrat\n\nimport { ethers } from \"ethers\";\nimport './App.css'; // https://docs.soliditylang.org/en/v0.8.14/abi-spec.html?\n\nimport abi from \"./utils/IftOpinion.json\";\n\nvar App = function App() {\n  // storer le wallet de l'utilisateur\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentAccount = _useState2[0],\n      setCurrentAccount = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allPosts = _useState4[0],\n      setAllPosts = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputData = _useState6[0],\n      setInputData = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1]; // adresse de notre contrat deployé\n\n\n  var contractAddress = \"0xdc4bD2edD5e818F5D052adbE4089C42E6736d113\";\n  /*  \n  * Lorsque on compile notre contrat, le compilateur genere des fichiers qui nous permettent d'interagir avec le contrat. \n  * les fichiers se trouve dans le dossier artefacts situé à la racine du projet Solidity.\n  * on copie le contenue du fichier json et on le ramene dans projet front-end dans \"/src/utils/IftOpinion.json\n  */\n\n  var contractABI = abi.abi;\n\n  var checkIfWalletIsConnected = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _window, ethereum, accounts, account;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _window = window, ethereum = _window.ethereum;\n\n              if (ethereum) {\n                _context.next = 7;\n                break;\n              }\n\n              console.log(\"Veuillez telecharger l'application Metamask!\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              console.log(\"L'objet ethereum a été detecté\", ethereum);\n\n            case 8:\n              _context.next = 10;\n              return ethereum.request({\n                method: \"eth_accounts\"\n              });\n\n            case 10:\n              accounts = _context.sent;\n\n              if (accounts.length !== 0) {\n                account = accounts[0];\n                console.log(\"compte autoriser trouvé!\", account);\n                setCurrentAccount(account);\n                getAllPosts();\n              } else {\n                console.log(\"Aucun compte autoriser n'a été trouver !\");\n              }\n\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14]]);\n    }));\n\n    return function checkIfWalletIsConnected() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var connectWallet = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _window2, ethereum, accounts;\n\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _window2 = window, ethereum = _window2.ethereum;\n\n              if (ethereum) {\n                _context2.next = 5;\n                break;\n              }\n\n              alert(\"Veuillez telecharger l'application Metamask!\");\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              _context2.next = 7;\n              return ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n\n            case 7:\n              accounts = _context2.sent;\n              console.log(\"Connected\", accounts[0]);\n              setCurrentAccount(accounts[0]);\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function connectWallet() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var post = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var _window3, ethereum, provider, signer, iftOpinionContract, totalPosts, postTxn;\n\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _window3 = window, ethereum = _window3.ethereum;\n\n              if (!ethereum) {\n                _context3.next = 25;\n                break;\n              }\n\n              setLoading(true);\n              /*\n              * code qui nous permet de lire du data dans la blockchain(dans notre smart contract)\n              * cette transaction est gratuite donc pas de gas fees puisque on fais que lire et on n'apporte pas de changement\n              * dans la blockchain\n              */\n\n              /*\n              * Le provider c'est ce qui nous permet de communiquer avec les noeuds d'ethereum \n              * on utilise des nœuds que Metamask fournit pour envoyer/recevoir des données de notre contrat\n              */\n\n              provider = new ethers.providers.Web3Provider(ethereum);\n              /*\n              * Plus d'information sur le signer sur la doc de ethers https://docs.ethers.io/v5/api/signer/#signers?\n              */\n\n              signer = provider.getSigner();\n              iftOpinionContract = new ethers.Contract(contractAddress, contractABI, signer);\n              _context3.next = 9;\n              return iftOpinionContract.getTotalPosts();\n\n            case 9:\n              totalPosts = _context3.sent;\n              console.log(\"Total Posts....\", totalPosts.toNumber());\n              /*\n              * Code qui nous permet d'ecrire du data dans la blockchain\n              * Ici metamask va pop-up et va nous demander de payer un gas-fees\n              */\n\n              _context3.next = 13;\n              return iftOpinionContract.post(inputData, {\n                gasLimit: 300000\n              });\n\n            case 13:\n              postTxn = _context3.sent;\n              console.log(\"Mining Transaction.....\", postTxn.hash);\n              _context3.next = 17;\n              return postTxn.wait();\n\n            case 17:\n              console.log(\"Transaction Mined! \", postTxn.hash);\n              setLoading(false);\n              _context3.next = 21;\n              return iftOpinionContract.getTotalPosts();\n\n            case 21:\n              totalPosts = _context3.sent;\n              console.log(\"Total Posts....\", totalPosts.toNumber());\n              _context3.next = 26;\n              break;\n\n            case 25:\n              console.log(\"L'objet ethereum n'existe pas !\");\n\n            case 26:\n              _context3.next = 33;\n              break;\n\n            case 28:\n              _context3.prev = 28;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              alert(\"Svp ressayez dans 1 minutes\");\n              setLoading(false);\n\n            case 33:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 28]]);\n    }));\n\n    return function post() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getAllPosts = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var _window4, ethereum, provider, signer, iftOpinionContract, posts, myPosts;\n\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _window4 = window, ethereum = _window4.ethereum;\n\n              if (!ethereum) {\n                _context4.next = 14;\n                break;\n              }\n\n              provider = new ethers.providers.Web3Provider(ethereum);\n              signer = provider.getSigner();\n              iftOpinionContract = new ethers.Contract(contractAddress, contractABI, signer);\n              _context4.next = 8;\n              return iftOpinionContract.getAllPosts();\n\n            case 8:\n              posts = _context4.sent;\n              myPosts = [];\n              posts.forEach(function (post) {\n                myPosts.push({\n                  address: post.poster,\n                  timestamp: new Date(post.timestamp * 1000),\n                  data: post.data\n                });\n              });\n              setAllPosts(myPosts);\n              _context4.next = 15;\n              break;\n\n            case 14:\n              console.log(\"L'objet ethereum n'existe pas !\");\n\n            case 15:\n              _context4.next = 20;\n              break;\n\n            case 17:\n              _context4.prev = 17;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 17]]);\n    }));\n\n    return function getAllPosts() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var getInputData = function getInputData(val) {\n    setInputData(val.target.value);\n  };\n\n  useEffect(function () {\n    checkIfWalletIsConnected();\n    var iftOpinionContract;\n    var _window5 = window,\n        ethereum = _window5.ethereum;\n\n    var onNewPost = function onNewPost(from, timestamp, message) {\n      console.log(\"NewPost\", from, timestamp, message);\n      setAllPosts(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), [{\n          address: from,\n          timestamp: new Date(timestamp * 1000),\n          data: message\n        }]);\n      });\n    };\n\n    if (ethereum) {\n      var provider = new ethers.providers.Web3Provider(window.ethereum);\n      var signer = provider.getSigner();\n      iftOpinionContract = new ethers.Contract(contractAddress, contractABI, signer);\n      iftOpinionContract.on(\"NewPost\", onNewPost);\n    }\n\n    return function () {\n      if (iftOpinionContract) {\n        iftOpinionContract.off(\"NewPost\", onNewPost);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dataContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Salut IFT-4100 \\uD83D\\uDC4B\\uD83D\\uDC4B\\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"Je m'apelle Hichem, ce portrail est pour but de permettre aux membres du cours IFT-4100 de poster leurs opinions sur le cours ou bien des ressources que vous trouvez utiles pour apprendre le Web3\"), currentAccount && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"type something\",\n    onChange: getInputData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postButton\",\n    onClick: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"Post !\")), loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"loader\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  })), !currentAccount && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"postButton\",\n    onClick: connectWallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, \"Connect Wallet\"), allPosts.map(function (post, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      style: {\n        backgroundColor: \"OldLace\",\n        marginTop: \"16px\",\n        padding: \"8px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, \"Address: \", post.address), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    }, \"Temps: \", post.timestamp.toString()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, \"Message(Ressource): \", post.data));\n  })));\n};\n\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","ethers","abi","App","currentAccount","setCurrentAccount","allPosts","setAllPosts","inputData","setInputData","loading","setLoading","contractAddress","contractABI","checkIfWalletIsConnected","window","ethereum","console","log","request","method","accounts","length","account","getAllPosts","connectWallet","alert","post","provider","providers","Web3Provider","signer","getSigner","iftOpinionContract","Contract","getTotalPosts","totalPosts","toNumber","gasLimit","postTxn","hash","wait","posts","myPosts","forEach","push","address","poster","timestamp","Date","data","getInputData","val","target","value","onNewPost","from","message","prevState","on","off","map","index","backgroundColor","marginTop","padding","toString"],"sources":["/Users/hichem/Documents/ULAVAL/ÉTÉ-2022/IFT-4100/tp3-demo/web-app/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\n\n// Librairie qui va nous permettre de communiquer avec notre contrat\nimport { ethers } from \"ethers\"\n\nimport './App.css';\n\n// https://docs.soliditylang.org/en/v0.8.14/abi-spec.html?\nimport abi from \"./utils/IftOpinion.json\";\n\n\nconst App = () =>  {\n\n  // storer le wallet de l'utilisateur\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const [allPosts, setAllPosts] = useState([]);\n  \n  const [inputData, setInputData] = useState(\"\");\n\n  const [ loading, setLoading ] = useState(false);\n\n  // adresse de notre contrat deployé\n  const contractAddress = \"0xdc4bD2edD5e818F5D052adbE4089C42E6736d113\";\n\n  /*  \n  * Lorsque on compile notre contrat, le compilateur genere des fichiers qui nous permettent d'interagir avec le contrat. \n  * les fichiers se trouve dans le dossier artefacts situé à la racine du projet Solidity.\n  * on copie le contenue du fichier json et on le ramene dans projet front-end dans \"/src/utils/IftOpinion.json\n  */\n  const contractABI = abi.abi;\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        console.log(\"Veuillez telecharger l'application Metamask!\")\n        return;\n      } else {\n        console.log(\"L'objet ethereum a été detecté\", ethereum);\n      }\n\n      /*\n        Check si on est autoriser a acceder au wallet de l'utilisateur\n      */\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log(\"compte autoriser trouvé!\", account);\n        setCurrentAccount(account);\n        getAllPosts();\n      } else {\n        console.log(\"Aucun compte autoriser n'a été trouver !\")\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Veuillez telecharger l'application Metamask!\")\n        return;\n      }\n\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n      console.log(\"Connected\", accounts[0]);\n\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const post = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n\n        setLoading(true);\n\n        /*\n        * code qui nous permet de lire du data dans la blockchain(dans notre smart contract)\n        * cette transaction est gratuite donc pas de gas fees puisque on fais que lire et on n'apporte pas de changement\n        * dans la blockchain\n        */\n\n          /*\n          * Le provider c'est ce qui nous permet de communiquer avec les noeuds d'ethereum \n          * on utilise des nœuds que Metamask fournit pour envoyer/recevoir des données de notre contrat\n          */\n          const provider = new ethers.providers.Web3Provider(ethereum)\n\n          /*\n          * Plus d'information sur le signer sur la doc de ethers https://docs.ethers.io/v5/api/signer/#signers?\n          */\n          const signer = provider.getSigner();\n\n          const iftOpinionContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n          let totalPosts = await iftOpinionContract.getTotalPosts();\n          console.log(\"Total Posts....\", totalPosts.toNumber());\n\n        /*\n        * Code qui nous permet d'ecrire du data dans la blockchain\n        * Ici metamask va pop-up et va nous demander de payer un gas-fees\n        */\n          const postTxn = await iftOpinionContract.post(inputData, { gasLimit: 300000 });\n          console.log(\"Mining Transaction.....\", postTxn.hash);\n\n          await postTxn.wait();\n          console.log(\"Transaction Mined! \", postTxn.hash);\n          setLoading(false);\n\n          totalPosts = await iftOpinionContract.getTotalPosts();\n          console.log(\"Total Posts....\", totalPosts.toNumber());\n        \n      } else {\n        console.log(\"L'objet ethereum n'existe pas !\");\n      }      \n    } catch (error) {\n      console.log(error);\n      alert(\"Svp ressayez dans 1 minutes\");\n      setLoading(false);\n    }\n  }\n\n  const getAllPosts = async () => {\n    try {\n      const { ethereum } = window;\n\n      if(ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const iftOpinionContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        const posts = await iftOpinionContract.getAllPosts();\n\n        const myPosts = [];\n        posts.forEach(post => {\n          myPosts.push({\n            address: post.poster,\n            timestamp: new Date(post.timestamp * 1000),\n            data: post.data,\n          });\n        });\n        setAllPosts(myPosts);\n      } else {\n        console.log(\"L'objet ethereum n'existe pas !\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const getInputData = (val) => {\n    setInputData(val.target.value);\n  }\n\n\n\n  useEffect(() => {\n   checkIfWalletIsConnected();\n   let iftOpinionContract;\n   const { ethereum } = window;\n\n   const onNewPost = (from, timestamp, message) => {\n     console.log(\"NewPost\", from, timestamp, message);\n     setAllPosts(prevState => [\n       ...prevState,\n       {\n         address: from,\n         timestamp: new Date(timestamp * 1000),\n         data: message,\n       },\n     ]);\n   };\n \n   if (ethereum) {\n     const provider = new ethers.providers.Web3Provider(window.ethereum);\n     const signer = provider.getSigner();\n \n     iftOpinionContract = new ethers.Contract(contractAddress, contractABI, signer);\n     iftOpinionContract.on(\"NewPost\", onNewPost);\n   }\n\n   return () => {\n    if (iftOpinionContract) {\n      iftOpinionContract.off(\"NewPost\", onNewPost);\n    }\n  };\n\n  }, []);\n\n  return (\n    <div className=\"mainContainer\">\n\n      <div className=\"dataContainer\">\n        <div className=\"header\">\n          Salut IFT-4100 👋👋👋\n        </div>\n\n        <div className=\"bio\">\n          Je m'apelle Hichem, ce portrail est pour but de permettre aux membres du cours IFT-4100 \n          de poster leurs opinions sur le cours ou bien des ressources que vous trouvez utiles \n          pour apprendre le Web3\n        </div>\n\n\n        {currentAccount && (\n          <>\n            <input type=\"text\" placeholder=\"type something\" onChange={getInputData}/>\n            <button className=\"postButton\" onClick={post}>\n              Post !\n            </button>\n          </>\n        )}\n\n        { loading && (\n          <div>\n            <div class=\"loader\"></div>\n          </div> \n        )}\n\n\n\n        {/*\n        * Si il n'y a pas de currentAccount on doit afficher notre button\n        */}\n        {!currentAccount && (\n          \n          <button className=\"postButton\" onClick={connectWallet}>\n            Connect Wallet\n          </button>\n        )}\n\n        {allPosts.map((post, index) =>{\n          return (\n            <div key={index} style={{backgroundColor: \"OldLace\", marginTop: \"16px\", padding: \"8px\"}}>\n              <div>Address: {post.address}</div>\n              <div>Temps: {post.timestamp.toString()}</div>\n              <div>Message(Ressource): {post.data}</div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n\n}\n\nexport default App\n\n"],"mappings":";;;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAO;EAEjB;EAFiB,gBAG2BH,QAAQ,CAAC,EAAD,CAHnC;EAAA;EAAA,IAGVI,cAHU;EAAA,IAGMC,iBAHN;;EAAA,iBAKeL,QAAQ,CAAC,EAAD,CALvB;EAAA;EAAA,IAKVM,QALU;EAAA,IAKAC,WALA;;EAAA,iBAOiBP,QAAQ,CAAC,EAAD,CAPzB;EAAA;EAAA,IAOVQ,SAPU;EAAA,IAOCC,YAPD;;EAAA,iBASeT,QAAQ,CAAC,KAAD,CATvB;EAAA;EAAA,IASTU,OATS;EAAA,IASAC,UATA,kBAWjB;;;EACA,IAAMC,eAAe,GAAG,4CAAxB;EAEA;AACF;AACA;AACA;AACA;;EACE,IAAMC,WAAW,GAAGX,GAAG,CAACA,GAAxB;;EAEA,IAAMY,wBAAwB;IAAA,sEAAG;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,UAERC,MAFQ,EAErBC,QAFqB,WAErBA,QAFqB;;cAAA,IAIxBA,QAJwB;gBAAA;gBAAA;cAAA;;cAK3BC,OAAO,CAACC,GAAR,CAAY,8CAAZ;cAL2B;;YAAA;cAQ3BD,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,QAA9C;;YAR2B;cAAA;cAAA,OAcNA,QAAQ,CAACG,OAAT,CAAiB;gBAAEC,MAAM,EAAE;cAAV,CAAjB,CAdM;;YAAA;cAcvBC,QAduB;;cAgB7B,IAAIA,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B;gBACnBC,OADmB,GACTF,QAAQ,CAAC,CAAD,CADC;gBAEzBJ,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCK,OAAxC;gBACAlB,iBAAiB,CAACkB,OAAD,CAAjB;gBACAC,WAAW;cACZ,CALD,MAKO;gBACLP,OAAO,CAACC,GAAR,CAAY,0CAAZ;cACD;;cAvB4B;cAAA;;YAAA;cAAA;cAAA;cAyB7BD,OAAO,CAACC,GAAR;;YAzB6B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAxBJ,wBAAwB;MAAA;IAAA;EAAA,GAA9B;;EA6BA,IAAMW,aAAa;IAAA,uEAAG;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,WAEGV,MAFH,EAEVC,QAFU,YAEVA,QAFU;;cAAA,IAIbA,QAJa;gBAAA;gBAAA;cAAA;;cAKhBU,KAAK,CAAC,8CAAD,CAAL;cALgB;;YAAA;cAAA;cAAA,OASKV,QAAQ,CAACG,OAAT,CAAiB;gBAAEC,MAAM,EAAE;cAAV,CAAjB,CATL;;YAAA;cASZC,QATY;cAWlBJ,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,QAAQ,CAAC,CAAD,CAAjC;cAEAhB,iBAAiB,CAACgB,QAAQ,CAAC,CAAD,CAAT,CAAjB;cAbkB;cAAA;;YAAA;cAAA;cAAA;cAelBJ,OAAO,CAACC,GAAR;;YAfkB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAbO,aAAa;MAAA;IAAA;EAAA,GAAnB;;EAmBA,IAAME,IAAI;IAAA,uEAAG;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,WAEYZ,MAFZ,EAEDC,QAFC,YAEDA,QAFC;;cAAA,KAILA,QAJK;gBAAA;gBAAA;cAAA;;cAMPL,UAAU,CAAC,IAAD,CAAV;cAEA;AACR;AACA;AACA;AACA;;cAEU;AACV;AACA;AACA;;cACgBiB,QAlBD,GAkBY,IAAI3B,MAAM,CAAC4B,SAAP,CAAiBC,YAArB,CAAkCd,QAAlC,CAlBZ;cAoBL;AACV;AACA;;cACgBe,MAvBD,GAuBUH,QAAQ,CAACI,SAAT,EAvBV;cAyBCC,kBAzBD,GAyBsB,IAAIhC,MAAM,CAACiC,QAAX,CAAoBtB,eAApB,EAAqCC,WAArC,EAAkDkB,MAAlD,CAzBtB;cAAA;cAAA,OA2BkBE,kBAAkB,CAACE,aAAnB,EA3BlB;;YAAA;cA2BDC,UA3BC;cA4BLnB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BkB,UAAU,CAACC,QAAX,EAA/B;cAEF;AACR;AACA;AACA;;cAjCe;cAAA,OAkCiBJ,kBAAkB,CAACN,IAAnB,CAAwBnB,SAAxB,EAAmC;gBAAE8B,QAAQ,EAAE;cAAZ,CAAnC,CAlCjB;;YAAA;cAkCCC,OAlCD;cAmCLtB,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCqB,OAAO,CAACC,IAA/C;cAnCK;cAAA,OAqCCD,OAAO,CAACE,IAAR,EArCD;;YAAA;cAsCLxB,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCqB,OAAO,CAACC,IAA3C;cACA7B,UAAU,CAAC,KAAD,CAAV;cAvCK;cAAA,OAyCcsB,kBAAkB,CAACE,aAAnB,EAzCd;;YAAA;cAyCLC,UAzCK;cA0CLnB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BkB,UAAU,CAACC,QAAX,EAA/B;cA1CK;cAAA;;YAAA;cA6CPpB,OAAO,CAACC,GAAR,CAAY,iCAAZ;;YA7CO;cAAA;cAAA;;YAAA;cAAA;cAAA;cAgDTD,OAAO,CAACC,GAAR;cACAQ,KAAK,CAAC,6BAAD,CAAL;cACAf,UAAU,CAAC,KAAD,CAAV;;YAlDS;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAJgB,IAAI;MAAA;IAAA;EAAA,GAAV;;EAsDA,IAAMH,WAAW;IAAA,uEAAG;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,WAEKT,MAFL,EAERC,QAFQ,YAERA,QAFQ;;cAAA,KAIbA,QAJa;gBAAA;gBAAA;cAAA;;cAKRY,QALQ,GAKG,IAAI3B,MAAM,CAAC4B,SAAP,CAAiBC,YAArB,CAAkCd,QAAlC,CALH;cAMRe,MANQ,GAMCH,QAAQ,CAACI,SAAT,EAND;cAORC,kBAPQ,GAOa,IAAIhC,MAAM,CAACiC,QAAX,CAAoBtB,eAApB,EAAqCC,WAArC,EAAkDkB,MAAlD,CAPb;cAAA;cAAA,OASME,kBAAkB,CAACT,WAAnB,EATN;;YAAA;cASRkB,KATQ;cAWRC,OAXQ,GAWE,EAXF;cAYdD,KAAK,CAACE,OAAN,CAAc,UAAAjB,IAAI,EAAI;gBACpBgB,OAAO,CAACE,IAAR,CAAa;kBACXC,OAAO,EAAEnB,IAAI,CAACoB,MADH;kBAEXC,SAAS,EAAE,IAAIC,IAAJ,CAAStB,IAAI,CAACqB,SAAL,GAAiB,IAA1B,CAFA;kBAGXE,IAAI,EAAEvB,IAAI,CAACuB;gBAHA,CAAb;cAKD,CAND;cAOA3C,WAAW,CAACoC,OAAD,CAAX;cAnBc;cAAA;;YAAA;cAqBd1B,OAAO,CAACC,GAAR,CAAY,iCAAZ;;YArBc;cAAA;cAAA;;YAAA;cAAA;cAAA;cAwBhBD,OAAO,CAACC,GAAR;;YAxBgB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAXM,WAAW;MAAA;IAAA;EAAA,GAAjB;;EA4BA,IAAM2B,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;IAC5B3C,YAAY,CAAC2C,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAZ;EACD,CAFD;;EAMAvD,SAAS,CAAC,YAAM;IACfe,wBAAwB;IACxB,IAAImB,kBAAJ;IAFe,eAGMlB,MAHN;IAAA,IAGPC,QAHO,YAGPA,QAHO;;IAKf,IAAMuC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOR,SAAP,EAAkBS,OAAlB,EAA8B;MAC9CxC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBsC,IAAvB,EAA6BR,SAA7B,EAAwCS,OAAxC;MACAlD,WAAW,CAAC,UAAAmD,SAAS;QAAA,oCAChBA,SADgB,IAEnB;UACEZ,OAAO,EAAEU,IADX;UAEER,SAAS,EAAE,IAAIC,IAAJ,CAASD,SAAS,GAAG,IAArB,CAFb;UAGEE,IAAI,EAAEO;QAHR,CAFmB;MAAA,CAAV,CAAX;IAQD,CAVD;;IAYA,IAAIzC,QAAJ,EAAc;MACZ,IAAMY,QAAQ,GAAG,IAAI3B,MAAM,CAAC4B,SAAP,CAAiBC,YAArB,CAAkCf,MAAM,CAACC,QAAzC,CAAjB;MACA,IAAMe,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;MAEAC,kBAAkB,GAAG,IAAIhC,MAAM,CAACiC,QAAX,CAAoBtB,eAApB,EAAqCC,WAArC,EAAkDkB,MAAlD,CAArB;MACAE,kBAAkB,CAAC0B,EAAnB,CAAsB,SAAtB,EAAiCJ,SAAjC;IACD;;IAED,OAAO,YAAM;MACZ,IAAItB,kBAAJ,EAAwB;QACtBA,kBAAkB,CAAC2B,GAAnB,CAAuB,SAAvB,EAAkCL,SAAlC;MACD;IACF,CAJA;EAMA,CA/BQ,EA+BN,EA/BM,CAAT;EAiCA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAK,SAAS,EAAC,eAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yDADF,eAKE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yMALF,EAYGnD,cAAc,iBACb,uDACE;IAAO,IAAI,EAAC,MAAZ;IAAmB,WAAW,EAAC,gBAA/B;IAAgD,QAAQ,EAAE+C,YAA1D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAQ,SAAS,EAAC,YAAlB;IAA+B,OAAO,EAAExB,IAAxC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAFF,CAbJ,EAqBIjB,OAAO,iBACP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,KAAK,EAAC,QAAX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAtBJ,EAgCG,CAACN,cAAD,iBAEC;IAAQ,SAAS,EAAC,YAAlB;IAA+B,OAAO,EAAEqB,aAAxC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBAlCJ,EAuCGnB,QAAQ,CAACuD,GAAT,CAAa,UAAClC,IAAD,EAAOmC,KAAP,EAAgB;IAC5B,oBACE;MAAK,GAAG,EAAEA,KAAV;MAAiB,KAAK,EAAE;QAACC,eAAe,EAAE,SAAlB;QAA6BC,SAAS,EAAE,MAAxC;QAAgDC,OAAO,EAAE;MAAzD,CAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAAetC,IAAI,CAACmB,OAApB,CADF,eAEE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,cAAanB,IAAI,CAACqB,SAAL,CAAekB,QAAf,EAAb,CAFF,eAGE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,2BAA0BvC,IAAI,CAACuB,IAA/B,CAHF,CADF;EAOD,CARA,CAvCH,CAFF,CADF;AAuDD,CArPD;;AAuPA,eAAe/C,GAAf"},"metadata":{},"sourceType":"module"}